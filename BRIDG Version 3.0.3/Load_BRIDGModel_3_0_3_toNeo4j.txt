//
//  Using BRIDGModel extracts,  load the 3.0.3 version csv files into a Graph Database.
//  These scripts are specific to neo4j,  but the should be easily adjustable to any cypher-based graph database. 
//
//  The Node file loads ClassNames, and the Attribute File loads Attributes.  
//  Attributes link to ClassNames with the ‘HAS’ relationship.
//  The Edges file is used to load Associations and Descendents.   The Ancestor_of edge is not created.  
//  
//
//   This assumes the input files exist in the BRIDG Import File 
//
//   Jane Pollack 2019/04/26
//

// DELETING EVERYTHING for a particular version:
MATCH (n:Attribute {version:"3.0.3"})
       OPTIONAL MATCH (n:Attribute {version:"3.0.3"})-[r {version:"3.0.3"}]-()
       WITH n,r LIMIT 50000
       DELETE n,r
       RETURN count(n) as deletedNodesCount;

MATCH (n:ClassName {version:"3.0.3"})
       OPTIONAL MATCH (n:ClassName {version:"3.0.3"})-[r {version:"3.0.3"}]-()
       WITH n,r LIMIT 50000
       DELETE n,r
       RETURN count(n) as deletedNodesCount;

CREATE CONSTRAINT ON (c:ClassName) ASSERT c.ClassNameVersion IS UNIQUE;

//USING PERIODIC COMMIT

// --------------------------------------------------------
//
//  Loading 3.0.3 Classes, Attributes, and Relationships
//
// --------------------------------------------------------

// Create all the Classes 
LOAD CSV WITH HEADERS FROM 'file:///BRIDG_3_0_3_Node.csv' AS line WITH line 
CREATE (className:ClassName {
ClassNameVersion: trim(line.ClassName) + '_' + trim(line.Version), 
name: trim( line.ClassName), 
subdomainName: trim(line.SubdomainName), 
version: trim(line.Version),
notes: trim(line.Notes)
} )
;

// Get all the Classes
//MATCH (ca:ClassName) return ca.name;
//MATCH (a:ClassName) WHERE a.name = "Subject" return a;

//ClassName	Attribute	DataType	Version	Notes
LOAD CSV WITH HEADERS FROM 'file:///BRIDG_3_0_3_Attribute.csv' AS line WITH line 
CREATE (attribute:Attribute {
CNAVersion: trim(line.ClassName) + '_' + trim(line.Attribute) + "_" + trim(line.Version), 
name: trim( line.Attribute), 
dataType: trim(line.DataType), 
className: trim(line.ClassName), 
version: trim(line.Version),
notes: trim(line.Notes)
} )
;

// Link the Classes to their Attributes
CREATE INDEX ON :ClassName(ClassName);
CREATE INDEX ON :Attribute(ClassName);
// Link the Attributes to their Classes.
MATCH (c:ClassName {version:"3.0.3"}) WHERE c.version = "3.0.3" 
MATCH (a:Attribute {version:"3.0.3"}) WHERE a.className = c.name AND a.version = "3.0.3"
CREATE (c)-[:HAS {version: "3.0.3"}] -> (a)
;

// Load the Associations and Descendents
//ClassNameA	ConnectorType	ClassNameB	RelationshipName	Version. Notes
LOAD CSV WITH HEADERS FROM 'file:///BRIDG_3_0_3_Edge.csv' AS line with line
MATCH (cA:ClassName {version:"3.0.3"}) WHERE cA.name = line.ClassNameA AND line.ConnectorType = "ASSOCIATION_WITH"
MATCH (cB:ClassName {version:"3.0.3"}) WHERE cB.name = line.ClassNameB AND line.ConnectorType = "ASSOCIATION_WITH"
CREATE (cA)-[:ASSOCIATION_WITH {relationship:line.RelationshipName, version:line.Version, notes:line.Notes}]->(cB)
;

LOAD CSV WITH HEADERS FROM 'file:///BRIDG_3_0_3_Edge.csv' AS line with line
MATCH (cA:ClassName {version:"3.0.3"}) WHERE cA.name = line.ClassNameA AND line.ConnectorType = "DESCENDENT_OF"
MATCH (cB:ClassName {version:"3.0.3"}) WHERE cB.name = line.ClassNameB AND line.ConnectorType = "DESCENDENT_OF"
CREATE (cA)-[:DESCENDENT_OF {relationship:line.RelationshipName, version:line.Version, notes:line.Notes}]->(cB)
;

// Check number of Classes.  For Version 3.0.3,  there are 202 Classes
MATCH (c:ClassName) return c.version, count(*);
// 
// Check number of Attributes. For Version 3.0.3,  there are 557 attributes. 
// Check there are no erroneous connections (ClassName and Attribute must both be version 3.0.3)
MATCH (c:ClassName {version:"3.0.3"})-[r]-(a:Attribute) return c.version, a.version,type(r), count(*);
//
//│"3.0.3"    │"HAS"             │"3.0.3"    │["Attribute"]│"3.0.3"     │557       │
//├───────────┼──────────────────┼───────────┼─────────────┼────────────┼──────────┤
//│"3.0.3"    │"DESCENDENT_OF"   │"3.0.3"    │["ClassName"]│"3.0.3"     │176       │
//├───────────┼──────────────────┼───────────┼─────────────┼────────────┼──────────┤
//│"3.0.3"    │"ASSOCIATION_WITH"│"3.0.3"    │["ClassName"]│"3.0.3"     │575       │
MATCH (c:ClassName)-[r]-(c1) RETURN c.version, type(r), r.version, labels(c1), c1.version, count(*);

